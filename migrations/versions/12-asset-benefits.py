"""empty message

Revision ID: asset-benefits
Revises: add-usages
Create Date: 2015-07-16 04:22:23.429627

"""

# revision identifiers, used by Alembic.
revision = 'asset-benefits'
down_revision = 'add-usages'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import sessionmaker

from sponsortracker import data, model


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('benefit',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.Text(), nullable=True),
        sa.Column('received', sa.Boolean(), nullable=True),
        sa.Column('deal_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['deal_id'], ['deal.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('deal_id', 'name', name='_name_dealid_unique')
    )
    ### end Alembic commands ###
    
    # Need to initialize Benefit objects for all deals which currently have a level assigned
    # 
    # Creating a new session for modifying data is necessary to prevent
    # PostgreSQL from locking up due to being in a transaction.
    Session = sessionmaker(bind=op.get_bind())
    session = Session()
    
    for deal in session.query(model.Deal).all():
        level = data.Level[deal.level_name] if deal.level_name else None
        if level:
            deal.benefits = [model.Benefit(name=asset_type.name, deal_id=deal.id) for asset_type in deal.level.assets]
    
    session.commit()


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('benefit')
    ### end Alembic commands ###
